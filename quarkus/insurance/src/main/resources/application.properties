#### Logging

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}]] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=false

#### OpenTracing

quarkus.jaeger.service-name=insuranceservice
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces


#### Messaging

# Configure the Kafka source (we read from it)
smallrye.messaging.source.tickets.type=io.smallrye.reactive.messaging.kafka.Kafka
smallrye.messaging.source.tickets.topic=tickets
smallrye.messaging.source.tickets.bootstrap.servers=kafka:9092
smallrye.messaging.source.tickets.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
smallrye.messaging.source.tickets.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
smallrye.messaging.source.tickets.group.id=tickets-group-id

smallrye.messaging.source.payments.type=io.smallrye.reactive.messaging.kafka.Kafka
smallrye.messaging.source.payments.topic=payments
smallrye.messaging.source.payments.bootstrap.servers=kafka:9092
smallrye.messaging.source.payments.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
smallrye.messaging.source.payments.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
smallrye.messaging.source.payments.group.id=payments-insurance-group-id

#### Database

# configure your datasource
quarkus.datasource.url: jdbc:postgresql://postgres:5432/insurances
quarkus.datasource.driver: org.postgresql.Driver
quarkus.datasource.username: postgres
quarkus.datasource.password: postgres
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create


